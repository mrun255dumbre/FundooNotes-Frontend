[{"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\index.js":"1","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\reportWebVitals.js":"2","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\App.js":"3","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\appContext.js":"4","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\forgot-password.jsx":"5","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\login.jsx":"6","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\registration.jsx":"7","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\home.jsx":"8","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\reset-password.jsx":"9","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\services\\user-service.js":"10","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\services\\axios-service.js":"11","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\config\\config.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1119,"mtime":1609991378395,"results":"16","hashOfConfig":"14"},{"size":78,"mtime":1609778094275,"results":"17","hashOfConfig":"14"},{"size":2072,"mtime":1610081836792,"results":"18","hashOfConfig":"14"},{"size":2814,"mtime":1610323361173,"results":"19","hashOfConfig":"14"},{"size":5926,"mtime":1609936009738,"results":"20","hashOfConfig":"14"},{"size":794,"mtime":1610081743951,"results":"21","hashOfConfig":"14"},{"size":2414,"mtime":1609991772724,"results":"22","hashOfConfig":"14"},{"size":539,"mtime":1610325596384,"results":"23","hashOfConfig":"14"},{"size":274,"mtime":1610090294259,"results":"24","hashOfConfig":"14"},{"size":60,"mtime":1609809958430,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ys41j5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\index.js",[],["57","58"],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\reportWebVitals.js",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\App.js",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\appContext.js",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\forgot-password.jsx",["59","60"],"import React, { useState, useContext } from 'react';\r\nimport logo from '../assets/images/logo.png';\r\nimport './login.scss';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport userService from '../services/user-service';\r\n\r\nconst ForgotPassword = (props) => {\r\n    const [userData, setuserData] = useState({});\r\n    const {history} = props;\r\n    const formSubmit = () => {\r\n        if(!userData.email){ \r\n            window.alert(\"please enter email address\");\r\n            return;\r\n        }\r\n        \r\n        userService.forgotPassword(userData).then(response => {\r\n            if(response.data){\r\n                window.alert(\"Password reset link sent to your email\");\r\n                history.push('/reset-password');\r\n            } else{\r\n                window.alert(\"Please enter correct Email\");\r\n            }\r\n        })\r\n        \r\n    }   \r\n    return (\r\n        <>\r\n            <div className=\"navigation-bar\">\r\n                <div className=\"navigation-container\">\r\n                    <img className=\"logo\" src={logo}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-content\">\r\n                <div className=\"form\">\r\n                    <h2>Forgot Password</h2>\r\n                    <div className=\"formContent\">\r\n                        <div className=\"row-content\">\r\n                            <input type=\"text\" name=\"email\" value={userData.email || ''} onChange={event => {setuserData({...userData, email:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>Email</label>\r\n                        </div>\r\n                        <div className=\"submit-button\">\r\n                            <button onClick={formSubmit} className=\"button\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row-button\">\r\n                        <Link to=\"/login\">Click here to Sign In</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(ForgotPassword);","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\login.jsx",["61","62","63","64"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport logo from '../assets/images/logo.png';\r\nimport './login.scss';\r\nimport { useParams, Link, withRouter } from 'react-router-dom';\r\nimport { AppContext } from '../appContext';\r\nimport userService from '../services/user-service';\r\n\r\nconst Login = (props) => {\r\n    const {user, setUser} = useContext(AppContext);\r\n    const [loginData, setLoginData] = useState({});\r\n    const {history} = props;\r\n    const formSubmit = () => {\r\n        if(!loginData.email){ \r\n            window.alert(\"please enter email address\");\r\n            return;\r\n        }\r\n        if(!loginData.password){ \r\n            window.alert(\"please enter password\");\r\n            return;\r\n        }\r\n        \r\n        userService.login(loginData).then(response => {\r\n            console.log(\"hi\",response.data);\r\n            if(response.data !== ''){\r\n                setUser(response.data);\r\n                history.push('/');\r\n            } else{\r\n                window.alert(\"Please enter correct username and password\");\r\n            }\r\n        })\r\n        \r\n    }   \r\n    return (\r\n        <>\r\n            <div className=\"navigation-bar\">\r\n                <div className=\"navigation-container\">\r\n                    <img className=\"logo\" src={logo}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-content\">\r\n                <div className=\"form\">\r\n                    <h2>Sign In</h2>\r\n                    <div className=\"formContent\">\r\n                        <div className=\"row-content\">\r\n                            <input type=\"text\" name=\"email\" value={loginData.email || ''} onChange={event => {setLoginData({...loginData, email:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>Email</label>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <input type=\"password\" name=\"password\" value={loginData.password || ''} onChange={event => {setLoginData({...loginData, password:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>Password</label>\r\n                        </div>\r\n                        <div className=\"submit-button\">\r\n                            <button onClick={formSubmit} className=\"button\">Login</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row-button\">\r\n                        <Link to=\"/signup\">Click here to Sign Up</Link>\r\n                    </div>\r\n                    <div className=\"row-button mt-5\">\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login);","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\registration.jsx",["65","66","67","68"],"import React, { useState, useEffect } from 'react';\r\nimport logo from '../assets/images/logo.png';\r\nimport './login.scss';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport userService from '../services/user-service';\r\n\r\nconst Registration = (props) => {   \r\n    const {history} = props;\r\n    let initialValue = {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        error: {\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            phoneNumber: ''\r\n        }\r\n    }\r\n    const [registrationData, setRegistrationData] = useState(initialValue);\r\n    const validData = async () => {\r\n        let isError = false;\r\n        let error = {\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            phoneNumber: ''\r\n        }\r\n        const usernameRegex = '^[A-Z][a-zA-Z]{2,}([ ][A-Z]([a-z]{1,})*)*$';\r\n        const phoneNumberRegex = RegExp('^([\\+]?[0-9]{2})?[-\\.]?[ ]?[0-9]{10}$');\r\n        const emailRegex = RegExp('^([a-zA-Z0-9]+[+_.-]?[a-zA-Z0-9]+)+@[a-zA-Z0-9-]+.[a-z]{2,3}.[a-z]{2,3}$');\r\n        const passwordRegex = RegExp('^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[@#$%^&-+=]).{8,}$');\r\n\r\n        if (registrationData.username.length < 1) {\r\n            error.username = 'Username is required field';\r\n            isError = true;\r\n        } else if(!registrationData.username.match(usernameRegex)) {\r\n            error.username = \"First letter should be in upper case\";\r\n            isError = true;\r\n        }\r\n\r\n        if (registrationData.password.length < 1) {\r\n            error.password = 'Password is required field';\r\n            isError = true;\r\n        } else if(!registrationData.password.match(passwordRegex)) {\r\n            error.password = \"Use at least 8 characters, 1 Upper Case and 1 special character\";\r\n            isError = true;\r\n        }\r\n\r\n        if(registrationData.email.length < 1) {\r\n            error.email = 'Email is required field';\r\n            isError = true;\r\n        } else if(!registrationData.email.match(emailRegex)) {\r\n            error.email = \"Please enter valid email\";\r\n            isError = true;\r\n        }\r\n        if (registrationData.phoneNumber.length < 1) {\r\n            error.phoneNumber = 'Phone Number is required field';\r\n            isError = true;\r\n        } else if (!registrationData.phoneNumber.match(phoneNumberRegex)) {\r\n            error.phoneNumber = \"Please enter valid Phone Number\";\r\n            isError = true;\r\n        }\r\n        await setRegistrationData({ ...registrationData, error: error })\r\n        return isError;\r\n    }\r\n\r\n    const formSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (await validData()) {\r\n            console.log('error', registrationData);\r\n            return;\r\n        }\r\n\r\n        userService.registration(registrationData).then(response => {\r\n            console.log(\"Response message \",response.data.message);\r\n            if(response.status === 200){\r\n                window.alert(\"Registration Successful!\");\r\n                history.push('/login');\r\n            } else{\r\n                window.alert(\"Registration failed!\");\r\n            }\r\n        })  \r\n    }       \r\n    return (\r\n        <>\r\n            <div className=\"navigation-bar\">\r\n                <div className=\"navigation-container\">\r\n                    <img className=\"logo\" src={logo}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-content\">\r\n                <div className=\"form\">\r\n                    <h2>Sign Up</h2>\r\n                    <div className=\"formContent\">\r\n                        <div className=\"row-content\">\r\n                            <input type=\"text\" name=\"username\" value={registrationData.username} onChange={event => {setRegistrationData({...registrationData, username:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>User Name</label>\r\n                            <div className=\"error\">{registrationData.error.username}</div>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <input type=\"password\" name=\"password\" value={registrationData.password} onChange={event => {setRegistrationData({...registrationData, password:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>Password</label>\r\n                            <div className=\"error\">{registrationData.error.password}</div>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <input type=\"email\" name=\"email\" value={registrationData.email} onChange={event => {setRegistrationData({...registrationData, email:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>Email</label>\r\n                            <div className=\"error\">{registrationData.error.email}</div>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <input type=\"tel\" name=\"phoneNumber\" value={registrationData.phoneNumber} onChange={event => {setRegistrationData({...registrationData, phoneNumber:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>Phone Number</label>  \r\n                            <div className=\"error\">{registrationData.error.phoneNumber}</div>\r\n                        </div>\r\n                        <div className=\"submit-button\">\r\n                            <button onClick={formSubmit} className=\"button\">Register</button>\r\n                        </div>\r\n                        <div className=\"row-button\">\r\n                            <Link to=\"/login\">Click here to Login</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Registration);","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\home.jsx",["69","70","71","72","73"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport logo from '../assets/images/logo.png';\r\nimport './login.scss';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { AppContext } from '../appContext';\r\n\r\nconst Home = (props) => {\r\n    const {user, setUser} = useContext(AppContext);\r\n    return (\r\n        <>\r\n            <div className=\"navigation-bar\">\r\n                <div className=\"navigation-container\">\r\n                    <img className=\"logo\" src={logo}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-content\">\r\n                <div className=\"form\">\r\n                    <h2>Login Successful!</h2>\r\n                    \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Home);","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\reset-password.jsx",["74","75"],"import React, { useState, useContext } from 'react';\r\nimport logo from '../assets/images/logo.png';\r\nimport './login.scss';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport userService from '../services/user-service';\r\n\r\nconst ResetPassword = (props) => {\r\n    const [userData, setuserData] = useState({});\r\n    const {history} = props;\r\n    const formSubmit = () => {\r\n        if(!userData.email){ \r\n            window.alert(\"please enter email address\");\r\n            return;\r\n        }\r\n        \r\n        userService.resetPassword(userData).then(response => {\r\n            if(response.data.data){\r\n                window.alert(\"Password reset link sent to your email\");\r\n                history.push('/login');\r\n            } else{\r\n                window.alert(\"Please enter correct Email\");\r\n            }\r\n        })\r\n        \r\n    }   \r\n    return (\r\n        <>\r\n            <div className=\"navigation-bar\">\r\n                <div className=\"navigation-container\">\r\n                    <img className=\"logo\" src={logo}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-content\">\r\n                <div className=\"form\">\r\n                    <h2>Reset Password</h2>\r\n                    <div className=\"formContent\">\r\n                        <div className=\"row-content\">\r\n                            <input type=\"text\" name=\"email\" value={userData.email || ''} onChange={event => {setuserData({...userData, email:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>Email</label>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <input type=\"text\" name=\"email\" value={userData.password || ''} onChange={event => {setuserData({...userData, password:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>New Password</label>\r\n                        </div>\r\n                        <div className=\"submit-button\">\r\n                            <button onClick={formSubmit} className=\"button\">Reset Password</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row-button\">\r\n                        <Link to=\"/login\">Click here to Sign In</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(ResetPassword);","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\services\\user-service.js",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\services\\axios-service.js",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\config\\config.js",[],["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":37},{"ruleId":"86","severity":1,"message":"87","line":30,"column":21,"nodeType":"88","endLine":30,"endColumn":55},{"ruleId":"82","severity":1,"message":"89","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":36},{"ruleId":"82","severity":1,"message":"90","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":19},{"ruleId":"82","severity":1,"message":"91","line":9,"column":12,"nodeType":"84","messageId":"85","endLine":9,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":37,"column":21,"nodeType":"88","endLine":37,"endColumn":55},{"ruleId":"82","severity":1,"message":"89","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":31,"column":45,"nodeType":"94","messageId":"95","endLine":31,"endColumn":46,"suggestions":"96"},{"ruleId":"92","severity":1,"message":"97","line":31,"column":61,"nodeType":"94","messageId":"95","endLine":31,"endColumn":62,"suggestions":"98"},{"ruleId":"86","severity":1,"message":"87","line":91,"column":21,"nodeType":"88","endLine":91,"endColumn":55},{"ruleId":"82","severity":1,"message":"99","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"89","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":36},{"ruleId":"82","severity":1,"message":"91","line":8,"column":12,"nodeType":"84","messageId":"85","endLine":8,"endColumn":16},{"ruleId":"82","severity":1,"message":"100","line":8,"column":18,"nodeType":"84","messageId":"85","endLine":8,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":13,"column":21,"nodeType":"88","endLine":13,"endColumn":55},{"ruleId":"82","severity":1,"message":"83","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":37},{"ruleId":"86","severity":1,"message":"87","line":30,"column":21,"nodeType":"88","endLine":30,"endColumn":55},{"ruleId":"78","replacedBy":"101"},{"ruleId":"80","replacedBy":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useParams' is defined but never used.","'user' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["105","106"],"Unnecessary escape character: \\..",["107","108"],"'useState' is defined but never used.","'setUser' is assigned a value but never used.",["103"],["104"],"no-global-assign","no-unsafe-negation",{"messageId":"109","fix":"110","desc":"111"},{"messageId":"112","fix":"113","desc":"114"},{"messageId":"109","fix":"115","desc":"111"},{"messageId":"112","fix":"116","desc":"114"},"removeEscape",{"range":"117","text":"118"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"119","text":"120"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"121","text":"118"},{"range":"122","text":"120"},[968,969],"",[968,968],"\\",[984,985],[984,984]]