[{"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\index.js":"1","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\reportWebVitals.js":"2","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\services\\user-service.js":"3","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\services\\axios-service.js":"4","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\config\\config.js":"5","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\notes\\Note.jsx":"6","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\app\\index.jsx":"7","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\app\\ThemeWrapper.jsx":"8","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\app\\NotFound.jsx":"9","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\index.jsx":"10","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\Dashboard.jsx":"11","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\common\\ContextWrapper.jsx":"12","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\utils\\AppContext.js":"13","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\common\\ProtectedRoute.jsx":"14","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\forgot-password.jsx":"15","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\reset-password.jsx":"16","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\registration.jsx":"17","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\login.jsx":"18","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\utils\\menu.js":"19"},{"size":150,"mtime":1610606564306,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":699,"mtime":1610471825032,"results":"23","hashOfConfig":"21"},{"size":377,"mtime":1610470444446,"results":"24","hashOfConfig":"21"},{"size":60,"mtime":1609809958430,"results":"25","hashOfConfig":"21"},{"size":6721,"mtime":1610599798573,"results":"26","hashOfConfig":"21"},{"size":1424,"mtime":1610697158159,"results":"27","hashOfConfig":"21"},{"size":6580,"mtime":1610628810749,"results":"28","hashOfConfig":"21"},{"size":698,"mtime":1610616700766,"results":"29","hashOfConfig":"21"},{"size":498,"mtime":1610623907280,"results":"30","hashOfConfig":"21"},{"size":1972,"mtime":1610625516024,"results":"31","hashOfConfig":"21"},{"size":816,"mtime":1610622074215,"results":"32","hashOfConfig":"21"},{"size":80,"mtime":1610607496005,"results":"33","hashOfConfig":"21"},{"size":456,"mtime":1610617872754,"results":"34","hashOfConfig":"21"},{"size":2063,"mtime":1610607944099,"results":"35","hashOfConfig":"21"},{"size":4108,"mtime":1610618098905,"results":"36","hashOfConfig":"21"},{"size":6071,"mtime":1610618026374,"results":"37","hashOfConfig":"21"},{"size":2873,"mtime":1610698822759,"results":"38","hashOfConfig":"21"},{"size":937,"mtime":1610626156440,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ys41j5",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\index.js",[],["85","86"],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\reportWebVitals.js",[],["87","88"],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\services\\user-service.js",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\services\\axios-service.js",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\config\\config.js",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\components\\notes\\Note.jsx",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\app\\index.jsx",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\app\\ThemeWrapper.jsx",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\app\\NotFound.jsx",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\index.jsx",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\Dashboard.jsx",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112"],"import React, { Component } from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Input, Button } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\n\r\nimport ToggleDisplay from 'react-toggle-display';\r\nimport SearchBar from 'material-ui-search-bar'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport menu from '../assets/icons/menu.svg';\r\nimport newmenu from '../assets/icons/newmenu.svg';\r\nimport back from '../assets/icons/back.svg';\r\nimport refresh from '../assets/icons/refresh.svg';\r\nimport listview from '../assets/icons/listview.svg';\r\nimport gridview from '../assets/icons/gridview.svg';\r\nimport googleapp from '../assets/icons/googleapp.svg';\r\nimport notification from '../assets/icons/notification.svg';\r\nimport reminder from '../assets/icons/reminder.svg';\r\nimport notes from '../assets/icons/note.svg';\r\nimport createnewlabel from '../assets/icons/createlabel.svg';\r\nimport trash from '../assets/icons/trash.svg';\r\nimport archive from '../assets/icons/archive.svg';\r\nimport Note from '../components/notes/Note';\r\n\r\nclass Dashboard extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            background: null,\r\n            show: false,\r\n            open: false,\r\n            user: null,\r\n            username: null,\r\n            title: null,\r\n            labelopen: false,\r\n            newlabel: null,\r\n            viewbtn: true,\r\n            opensearch: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rootdiv\">\r\n                \r\n\r\n                {window.location.pathname === '/home/notes' && <Note />}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\common\\ContextWrapper.jsx",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\utils\\AppContext.js",[],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\common\\ProtectedRoute.jsx",["113","114"],"import React, { useContext, useEffect } from 'react';\r\nimport { Redirect, Route, useHistory } from 'react-router-dom';\r\nimport { AppContext } from '../utils/AppContext';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AppContext);\r\n\r\n  return (<Route {...rest} render={(props) => (\r\n    user\r\n      ? <Component {...props} />\r\n      : <Redirect to='/login' />\r\n  )} />\r\n  )\r\n}\r\n\r\nexport { ProtectedRoute };","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\forgot-password.jsx",["115","116"],"import React, { useState, useContext } from 'react';\r\nimport logo from '../assets/images/logo.png';\r\nimport './login.scss';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport userService from '../services/user-service';\r\n\r\nconst ForgotPassword = (props) => {\r\n    const [userData, setuserData] = useState({});\r\n    const {history} = props;\r\n    const formSubmit = () => {\r\n        if(!userData.email){ \r\n            window.alert(\"please enter email address\");\r\n            return;\r\n        }\r\n        \r\n        userService.forgotPassword(userData).then(response => {\r\n            if(response.data){\r\n                window.alert(\"Password reset link sent to your email\");\r\n                history.push('/login');\r\n            } else{\r\n                window.alert(\"Please enter correct Email\");\r\n            }\r\n        })\r\n        \r\n    }   \r\n    return (\r\n        <>\r\n            <div className=\"navigation-bar\">\r\n                <div className=\"navigation-container\">\r\n                    <img className=\"logo\" src={logo}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-content\">\r\n                <div className=\"form\">\r\n                    <h2>Forgot Password</h2>\r\n                    <div className=\"formContent\">\r\n                        <div className=\"row-content\">\r\n                            <input type=\"text\" name=\"email\" value={userData.email || ''} onChange={event => {setuserData({...userData, email:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>Email</label>\r\n                        </div>\r\n                        <div className=\"submit-button\">\r\n                            <button onClick={formSubmit} className=\"button\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row-button\">\r\n                        <Link to=\"/login\">Click here to Sign In</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(ForgotPassword);","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\reset-password.jsx",["117","118","119"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport logo from '../assets/images/logo.png';\r\nimport './login.scss';\r\nimport { useParams, Link, withRouter } from 'react-router-dom';\r\nimport userService from '../services/user-service';\r\nimport { AppContext } from '../utils/AppContext';\r\n\r\nconst ResetPassword = (props) => {\r\n    const { token = '0' } = useParams();\r\n    let initialValue = {\r\n        password: '',\r\n        error: {\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n    }\r\n    const [userData, setUserData] = useState(initialValue);\r\n    const { history } = props;\r\n    const {user, setUser} = useContext(AppContext);\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n          history.push(\"/\")\r\n        }\r\n      },[user]);\r\n\r\n    const validData = async () => {\r\n        let isError = false;\r\n        let error = {\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n        const passwordRegex = RegExp('^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[@#$%^&-+=]).{8,20}$');\r\n\r\n        if (userData.password.length < 1) {\r\n            error.password = 'Password is required field';\r\n            isError = true;\r\n        } else if(!userData.password.match(passwordRegex)) {\r\n            error.password = \"Use at least 8 characters, 1 Upper Case and 1 special character\";\r\n            isError = true;\r\n        }\r\n\r\n        if (userData.confirmPassword.length < 1) {\r\n            error.password = 'Confirm Password is required field';\r\n            isError = true;\r\n        } else if(userData.password !== userData.confirmPassword) {\r\n            error.password = \"Password doesnt match\";\r\n            isError = true;\r\n        }\r\n\r\n        await setUserData({ ...userData, error: error })\r\n        return isError;\r\n    }\r\n\r\n    const formSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (await validData()) {\r\n            console.log('error', userData);\r\n            return;\r\n        }\r\n        userService.resetPassword(token,userData.password).then(response => {\r\n            if (response.status === 200) {\r\n                window.alert(\"Password updated successfully\");\r\n                history.push('/login');\r\n            } else {\r\n                window.alert(\"Unable to update password\");\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"navigation-bar\">\r\n                <div className=\"navigation-container\">\r\n                    <img className=\"logo\" src={logo} />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-content\">\r\n                <div className=\"form\">\r\n                    <h2>Reset Password</h2>\r\n                    <div className=\"formContent\">\r\n                        <div className=\"row-content\">\r\n                            <input type=\"password\" name=\"email\" value={userData.password || ''} onChange={event => { setUserData({ ...userData, password: event.target.value }) }} placeholder=\" \" required />\r\n                            <label>New Password</label>\r\n                            <div className=\"error\">{userData.error.password}</div>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <input type=\"password\" name=\"email\" value={userData.confirmPassword || ''} onChange={event => { setUserData({ ...userData, confirmPassword: event.target.value }) }} placeholder=\" \" required />\r\n                            <label>Confirm Password</label>\r\n                            <div className=\"error\">{userData.error.confirmPassword}</div>\r\n                        </div>\r\n                        <div className=\"submit-button\">\r\n                            <button onClick={formSubmit} className=\"button\">Reset Password</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row-button\">\r\n                        <Link to=\"/login\">Click here to Sign In</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(ResetPassword);","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\registration.jsx",["120","121","122","123","124"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport logo from '../assets/images/logo.png';\r\nimport './login.scss';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport userService from '../services/user-service';\r\nimport { AppContext } from '../utils/AppContext';\r\n\r\nconst Registration = (props) => {   \r\n    const {user, setUser} = useContext(AppContext);\r\n    const {history} = props;\r\n    let initialValue = {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        error: {\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            phoneNumber: ''\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n          history.push(\"/\")\r\n        }\r\n      },[user]);\r\n\r\n    const [registrationData, setRegistrationData] = useState(initialValue);\r\n    const validData = async () => {\r\n        let isError = false;\r\n        let error = {\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            phoneNumber: ''\r\n        }\r\n        const usernameRegex = '^[A-Z][a-zA-Z]{2,}([ ][A-Z]([a-z]{1,})*)*$';\r\n        const phoneNumberRegex = RegExp('^([\\+]?[0-9]{2})?[-\\.]?[ ]?[0-9]{10}$');\r\n        const emailRegex = RegExp('^([a-zA-Z0-9]+[+_.-]?[a-zA-Z0-9]+)+@[a-zA-Z0-9-]+.[a-z]{2,3}.[a-z]{2,3}$');\r\n        const passwordRegex = RegExp('^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[@#$%^&-+=]).{8,20}$');\r\n\r\n        if (registrationData.username.length < 1) {\r\n            error.username = 'Username is required field';\r\n            isError = true;\r\n        } else if(!registrationData.username.match(usernameRegex)) {\r\n            error.username = \"First letter should be in upper case\";\r\n            isError = true;\r\n        }\r\n\r\n        if (registrationData.password.length < 1) {\r\n            error.password = 'Password is required field';\r\n            isError = true;\r\n        } else if(!registrationData.password.match(passwordRegex)) {\r\n            error.password = \"Use at least 8 characters, 1 Upper Case and 1 special character\";\r\n            isError = true;\r\n        }\r\n\r\n        if(registrationData.email.length < 1) {\r\n            error.email = 'Email is required field';\r\n            isError = true;\r\n        } else if(!registrationData.email.match(emailRegex)) {\r\n            error.email = \"Please enter valid email\";\r\n            isError = true;\r\n        }\r\n        if (registrationData.phoneNumber.length < 1) {\r\n            error.phoneNumber = 'Phone Number is required field';\r\n            isError = true;\r\n        } else if (!registrationData.phoneNumber.match(phoneNumberRegex)) {\r\n            error.phoneNumber = \"Please enter valid Phone Number\";\r\n            isError = true;\r\n        }\r\n        await setRegistrationData({ ...registrationData, error: error })\r\n        return isError;\r\n    }\r\n\r\n    const formSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (await validData()) {\r\n            console.log('error', registrationData);\r\n            return;\r\n        }\r\n\r\n        userService.registration(registrationData).then(response => {\r\n            if(response.data.data){\r\n                window.alert(\"Registration Successful!\");\r\n                history.push('/login');\r\n            } else{\r\n                window.alert(response.data.message);\r\n            }\r\n        })  \r\n    }       \r\n    return (\r\n        <>\r\n            <div className=\"navigation-bar\">\r\n                <div className=\"navigation-container\">\r\n                    <img className=\"logo\" src={logo}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-content\">\r\n                <div className=\"form\">\r\n                    <h2>Sign Up</h2>\r\n                    <div className=\"formContent\">\r\n                        <div className=\"row-content\">\r\n                            <input type=\"text\" name=\"username\" value={registrationData.username} onChange={event => {setRegistrationData({...registrationData, username:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>User Name</label>\r\n                            <div className=\"error\">{registrationData.error.username}</div>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <input type=\"password\" name=\"password\" value={registrationData.password} onChange={event => {setRegistrationData({...registrationData, password:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>Password</label>\r\n                            <div className=\"error\">{registrationData.error.password}</div>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <input type=\"email\" name=\"email\" value={registrationData.email} onChange={event => {setRegistrationData({...registrationData, email:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>Email</label>\r\n                            <div className=\"error\">{registrationData.error.email}</div>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <input type=\"tel\" name=\"phoneNumber\" value={registrationData.phoneNumber} onChange={event => {setRegistrationData({...registrationData, phoneNumber:event.target.value})}} placeholder=\" \" required/>\r\n                            <label>Phone Number</label>  \r\n                            <div className=\"error\">{registrationData.error.phoneNumber}</div>\r\n                        </div>\r\n                        <div className=\"submit-button\">\r\n                            <button onClick={formSubmit} className=\"button\">Register</button>\r\n                        </div>\r\n                        <div className=\"row-button\">\r\n                            <Link to=\"/login\">Click here to Login</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Registration);","G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\pages\\login.jsx",["125","126","127"],"G:\\bridgelabz\\program\\final-project\\frontend-application\\src\\utils\\menu.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"128","replacedBy":"132"},{"ruleId":"130","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":15},{"ruleId":"134","severity":1,"message":"138","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":18},{"ruleId":"134","severity":1,"message":"139","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":15},{"ruleId":"134","severity":1,"message":"140","line":4,"column":17,"nodeType":"136","messageId":"137","endLine":4,"endColumn":23},{"ruleId":"134","severity":1,"message":"141","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":18},{"ruleId":"134","severity":1,"message":"142","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":14},{"ruleId":"134","severity":1,"message":"143","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":14},{"ruleId":"134","severity":1,"message":"144","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":24},{"ruleId":"134","severity":1,"message":"145","line":10,"column":8,"nodeType":"136","messageId":"137","endLine":10,"endColumn":21},{"ruleId":"134","severity":1,"message":"146","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":17},{"ruleId":"134","severity":1,"message":"147","line":12,"column":8,"nodeType":"136","messageId":"137","endLine":12,"endColumn":15},{"ruleId":"134","severity":1,"message":"148","line":13,"column":8,"nodeType":"136","messageId":"137","endLine":13,"endColumn":12},{"ruleId":"134","severity":1,"message":"149","line":14,"column":8,"nodeType":"136","messageId":"137","endLine":14,"endColumn":15},{"ruleId":"134","severity":1,"message":"150","line":15,"column":8,"nodeType":"136","messageId":"137","endLine":15,"endColumn":12},{"ruleId":"134","severity":1,"message":"151","line":16,"column":8,"nodeType":"136","messageId":"137","endLine":16,"endColumn":15},{"ruleId":"134","severity":1,"message":"152","line":17,"column":8,"nodeType":"136","messageId":"137","endLine":17,"endColumn":16},{"ruleId":"134","severity":1,"message":"153","line":18,"column":8,"nodeType":"136","messageId":"137","endLine":18,"endColumn":16},{"ruleId":"134","severity":1,"message":"154","line":19,"column":8,"nodeType":"136","messageId":"137","endLine":19,"endColumn":17},{"ruleId":"134","severity":1,"message":"155","line":20,"column":8,"nodeType":"136","messageId":"137","endLine":20,"endColumn":20},{"ruleId":"134","severity":1,"message":"156","line":21,"column":8,"nodeType":"136","messageId":"137","endLine":21,"endColumn":16},{"ruleId":"134","severity":1,"message":"157","line":22,"column":8,"nodeType":"136","messageId":"137","endLine":22,"endColumn":13},{"ruleId":"134","severity":1,"message":"158","line":23,"column":8,"nodeType":"136","messageId":"137","endLine":23,"endColumn":22},{"ruleId":"134","severity":1,"message":"159","line":24,"column":8,"nodeType":"136","messageId":"137","endLine":24,"endColumn":13},{"ruleId":"134","severity":1,"message":"160","line":25,"column":8,"nodeType":"136","messageId":"137","endLine":25,"endColumn":15},{"ruleId":"134","severity":1,"message":"161","line":1,"column":29,"nodeType":"136","messageId":"137","endLine":1,"endColumn":38},{"ruleId":"134","severity":1,"message":"162","line":2,"column":27,"nodeType":"136","messageId":"137","endLine":2,"endColumn":37},{"ruleId":"134","severity":1,"message":"163","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":30,"column":21,"nodeType":"166","endLine":30,"endColumn":55},{"ruleId":"134","severity":1,"message":"167","line":19,"column":18,"nodeType":"136","messageId":"137","endLine":19,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":25,"column":9,"nodeType":"170","endLine":25,"endColumn":15,"suggestions":"171"},{"ruleId":"164","severity":1,"message":"165","line":76,"column":21,"nodeType":"166","endLine":76,"endColumn":56},{"ruleId":"134","severity":1,"message":"167","line":9,"column":18,"nodeType":"136","messageId":"137","endLine":9,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":28,"column":9,"nodeType":"170","endLine":28,"endColumn":15,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":40,"column":45,"nodeType":"175","messageId":"176","endLine":40,"endColumn":46,"suggestions":"177"},{"ruleId":"173","severity":1,"message":"178","line":40,"column":61,"nodeType":"175","messageId":"176","endLine":40,"endColumn":62,"suggestions":"179"},{"ruleId":"164","severity":1,"message":"165","line":99,"column":21,"nodeType":"166","endLine":99,"endColumn":55},{"ruleId":"134","severity":1,"message":"180","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":17,"column":7,"nodeType":"170","endLine":17,"endColumn":13,"suggestions":"181"},{"ruleId":"164","severity":1,"message":"165","line":44,"column":21,"nodeType":"166","endLine":44,"endColumn":55},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],["182"],["183"],"no-unused-vars","'Toolbar' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'AppBar' is defined but never used.","'Drawer' is defined but never used.","'MuiThemeProvider' is defined but never used.","'ToggleDisplay' is defined but never used.","'SearchBar' is defined but never used.","'Divider' is defined but never used.","'menu' is defined but never used.","'newmenu' is defined but never used.","'back' is defined but never used.","'refresh' is defined but never used.","'listview' is defined but never used.","'gridview' is defined but never used.","'googleapp' is defined but never used.","'notification' is defined but never used.","'reminder' is defined but never used.","'notes' is defined but never used.","'createnewlabel' is defined but never used.","'trash' is defined but never used.","'archive' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'useContext' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["184"],["185"],"no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["186","187"],"Unnecessary escape character: \\..",["188","189"],"'useParams' is defined but never used.",["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"191","fix":"193"},{"messageId":"194","fix":"195","desc":"196"},{"messageId":"197","fix":"198","desc":"199"},{"messageId":"194","fix":"200","desc":"196"},{"messageId":"197","fix":"201","desc":"199"},{"desc":"191","fix":"202"},"Update the dependencies array to be: [history, user]",{"range":"203","text":"204"},{"range":"205","text":"204"},"removeEscape",{"range":"206","text":"207"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"208","text":"209"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"210","text":"207"},{"range":"211","text":"209"},{"range":"212","text":"204"},[766,772],"[history, user]",[768,774],[1186,1187],"",[1186,1186],"\\",[1202,1203],[1202,1202],[553,559]]